{
    "openapi": "3.0.0",
    "info": {
        "title": "F5 Application Services Demostration API",
        "description":"<h2>Building Cloud Ready F5 Controller Services</h2><p>A node <a href='https://expressjs.com/' class='link' target='_blank'>express</a> application which functions as part of a micro services framework. The application persistes to mongodb and accesses F5 BIG-IP devices through the <a href='https://hub.docker.com/r/f5devcentral/f5-api-services-gateway/' class='link' target='_blank'>API Services Gateway</a>. The application\\'s core function is to remove the concerns of BIG-IP authorization and roles by utilizing the <a href='https://hub.docker.com/r/f5devcentral/f5-api-services-gateway/' class='link' target='_blank'>API Services Gateway</a> to establish device trusts. </p><p><img src='/html/static/assets/images/f5-appsvcs-demo-microservices-diagram.png'></p><p>The API implements an <a href='/html/dist/config/swagger.json' class='link' target='_blank'>OpenAPI 3.0 schema</a>. The main API interface is the <a href='#/Deployments' class='link'>deployments endpoint</a> which can create groups of BIG-IP trusted devices and publishing iControl LX extensions to those devices.</p><p></p><p>To illustrate how a third part application framework can hold the authorization concern, instead of the BIG-IP, the application requires a user to be created with the <a href='#/Users' class='link'>users</a> API endpoint. The first user created will automatically have the <i><b>User Administrator</b></i> application role tag applied. To create the first user, you are not required to provide credentials.<h4>HTTP POST /users unauthenticate</h4><pre>{\\\"username\\\":\\\"admin\\\", \\\"password\\\":\\\"F5RocksAPIs!\\\"}</pre>Once that user is created, the user name and password must be supplied with HTTP BASIC authentication thereafter.</p><p>To be able to add BIG-IPs or iControl LX extensions to <i><b>deployments</b></i>, the API requests made to the <i>deployments</i> API endpoint must be authenticated by a user with the <i><b>BIGIP Administrator</b></i> role tag applied.</p><h4>HTTP PUT /users/{userId} with HTTP BASIC authentication</h4><pre>{\\\"roles\\\":[\\\"User Administrator\\\", \\\"BIGIP Administrator\\\"]}</pre><p>Once the appropriate application users and roles are defined, <i><b>deployments</b></i> can be created, which will use the <a href='https://hub.docker.com/r/f5devcentral/f5-api-services-gateway/' class='link' target='_blank'>API Services Gateway</a> to establish trust with remote BIG-IPs. The deployment can also be used to install iControl LX extensions on the trusted BIG-IP devices. The application\\'s <i><b>devices</b></i> and <i><b>deployments</b></i> API endpoints also and expose trusted access to any iControl REST endpoint. The endpoints can be used to administer individual trusted devices or have the iControl REST requests replicated across a multi-device deployment.</p><h2>Utilizing the Swagger Generated API User Interface</h2><p>Since we generated or APIs using an OpenAPI schema, the swagger-ui-express module has generated this interface for us. The interface uses your browser's XHR javascript client to provide interactive access to the API endpoints.</p><p><span style='line-height: 2.0;'>The <b>Servers</b> drop down selection and the <span class='btn authorize unlocked'>Authorize</span> button at the beginning of the API endpoints section allow you to specify which server to issue your API calls and what credentials to use for all requests made through the user interface.</span></p><p><span style='line-height: 2.0;'>Each API endpoint has a <span class='btn try-out__btn'>Try it out</span> button which allows you to create API requests as well as generate curl cli cut-n-paste examples.</span></p><h4>Wow.. all our APIs should use OpenAPI schema so we could self document and test everything.</h4><p>To get started, create a query to the <a href='#/Users' class='link'>users <span class='opblock-summary opblock-summary-post opblock-summary-method'>POST</span> endpoint</a> and follow the example post to create your <i><b>User Administrator</b></i> user. </p><p>Next, add your new user name and password in the form displayed when you click the <span class='btn authorize unlocked'>Authorize</span> button.</p><p>Next, use the <a href='#/Users' class='link'>users <span class='opblock-summary opblock-summary-put opblock-summary-method'>PUT</span> endpoint</a> to add the <i><b>BIGIP Administrator</b> role to your new user.</p>",
        "version": "1.0.0",
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "contact": {
            "name": "F5 DevCentral Community",
            "url": "https://devcentral.f5.com"
        }
    },
    "servers": [{
        "url": "/api",
        "description": "F5 Application Services Demonstration Server"
    }],
    "tags": [{
        "name": "Users",
        "description": "API for Users Endpoints"
    }, {
        "name": "Deployments",
        "description": "API for Deployments Endpoints"
    }, {
        "name": "Devices",
        "description": "API for Devices Endpoints"
    }, {
        "name": "Extensions",
        "description": "API for Extensions Endpoints"
    }],
    "components": {
        "securitySchemes": {
            "BasicAuth": {
                "type": "http",
                "scheme": "basic"
            }
        },
        "schemas": {
            "UserRequest": {
                "required": [
                    "username",
                    "password"
                ],
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minLength": 8,
                        "maxLength": 128,
                        "pattern": "^(?=.*[A-Z].*[a-z])(?=.*[!@#$&*:])(?=.*[0-9].*[0-9]).{8,128}$"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "example": {
                    "username": "admin",
                    "password": "F5RocksAPIs!"
                }
            },
            "UserUpdateRequest": {
                "properties": {
                    "password": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": ["User Administrator", "BIGIP Administrator"]
                        }
                    }
                },
                "example": {
                    "roles": ["User Administrator", "BIGIP Administrator"]
                }
            },
            "UserResponse": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "example": {
                    "id": "5ba06c34c075ca0008ff8731",
                    "username": "admin",
                    "roles": [
                        "User Administrator"
                    ]
                }
            },
            "Users": {
                "properties": {
                    "docs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserResponse"
                        }
                    },
                    "total": {
                        "type": "integer"
                    },
                    "pages": {
                        "type": "integer"
                    },
                    "limit": {
                        "type": "integer"
                    },
                    "page": {
                        "type": "integer"
                    }
                },
                "example": {
                    "docs": [{
                            "id": "5ba06c34c075ca0008ff8731",
                            "username": "admin",
                            "roles": [
                                "User Administrator"
                            ]
                        },
                        {
                            "id": "5ba264ccc3084f5528d41362",
                            "username": "Bob",
                            "roles": [
                                "BIGIP Administrator"
                            ]
                        }
                    ],
                    "total": 2,
                    "limit": 10,
                    "page": 1,
                    "pages": 1
                }
            },
            "DeploymentRequest": {
                "required": [
                    "name",
                    "devices"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeviceRequest"
                        }
                    },
                    "extensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExtensionRequest"
                        }
                    }
                },
                "example": {
                    "name": "dmzProxies",
                    "devices": [{
                            "targetHost": "172.13.1.103",
                            "targetPort": 443,
                            "targetUsername": "admin",
                            "targetPassphrase": "admin"
                        },
                        {
                            "targetHost": "172.13.1.107",
                            "targetPort": 443,
                            "targetUsername": "admin",
                            "targetPassphrase": "admin"
                        }
                    ],
                    "extensions": [{
                        "url": "https://github.com/F5Networks/f5-appsvcs-extension/releases/download/v3.5.0/f5-appsvcs-3.5.0-3.noarch.rpm"
                    }]
                }
            },
            "DeploymentResponse": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeviceResponse"
                        }
                    },
                    "extensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExtensionResponse"
                        }
                    }
                },
                "example": {
                    "name": "dmzProxies",
                    "devices": [{
                        "id": "5bd6c372b3049d3aaba814d4",
                        "targetHost": "172.13.1.103",
                        "targetPort": 443,
                        "isBigIP": true,
                        "state": "ACTIVE"
                    }, {
                        "id": "5bd6c372b3049d3aaba814d5",
                        "targetHost": "172.13.1.107",
                        "targetPort": 443,
                        "isBigIP": true,
                        "state": "ACTIVE"
                    }],
                    "extensions": [{
                        "id": "5bd6c372b3049d3aaba814d3",
                        "url": "https://github.com/F5Networks/f5-appsvcs-extension/releases/download/v3.5.0/f5-appsvcs-3.5.0-3.noarch.rpm",
                        "filename": "f5-appsvcs-3.5.0-3.noarch.rpm",
                        "packagename": "f5-appsvcs-3.5.0-3.noarch",
                        "onGateway": true,
                        "status": "AVAILABLE",
                        "deviceIds": ["5bd6c372b3049d3aaba814d4", "5bd6c372b3049d3aaba814d5"]
                    }]
                }
            },
            "DeploymentUpdateRequest": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeviceUpdateRequest"
                        }
                    },
                    "extensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExtensionUpdateRequest"
                        }
                    }
                },
                "example": {
                    "name": "dmzProxiesDevices",
                    "devices": [{
                        "id": "5bd6c372b3049d3aaba814d4"
                    }, {
                        "targetHost": "172.13.1.109",
                        "targetPort": 443,
                        "targetUsername": "admin",
                        "targetPassphrase": "admin"
                    }],
                    "extensions": [{
                        "id": "5bd6c372b3049d3aaba814d3"
                    }]
                }
            },
            "DeploymentUpdateResponse": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeviceResponse"
                        }
                    },
                    "extensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExtensionResponse"
                        }
                    }
                },
                "example": {
                    "name": "dmzProxiesDevices",
                    "devices": [{
                        "id": "5bd6c372b3049d3aaba814d4",
                        "targetHost": "172.13.1.103",
                        "targetPort": 443,
                        "isBigIP": true,
                        "state": "ACTIVE"
                    }, {
                        "id": "5bd6c372b3049d3aaba814d8",
                        "targetHost": "172.13.1.109",
                        "targetPort": 443,
                        "isBigIP": true,
                        "state": "ACTIVE"
                    }],
                    "extensions": [{
                        "id": "5bd6c372b3049d3aaba814d3",
                        "url": "https://github.com/F5Networks/f5-appsvcs-extension/releases/download/v3.5.0/f5-appsvcs-3.5.0-3.noarch.rpm",
                        "filename": "f5-appsvcs-3.5.0-3.noarch.rpm",
                        "packagename": "f5-appsvcs-3.5.0-3.noarch",
                        "onGateway": true,
                        "status": "AVAILABLE",
                        "deviceIds": ["5bd6c372b3049d3aaba814d4", "5bd6c372b3049d3aaba814d8"]
                    }]
                }
            },
            "Deployments": {
                "properties": {
                    "docs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeploymentResponse"
                        }
                    },
                    "total": {
                        "type": "integer"
                    },
                    "pages": {
                        "type": "integer"
                    },
                    "limit": {
                        "type": "integer"
                    },
                    "page": {
                        "type": "integer"
                    }
                },
                "example": {
                    "docs": [{
                        "id": "5ba2ad11c96e8114849bf51e",
                        "name": "dmzProxies",
                        "devices": [{
                                "id": "5bd6c372b3049d3aaba814d4",
                                "targetHost": "172.13.1.103",
                                "targetPort": 443,
                                "isBigIP": true,
                                "state": "ACTIVE"
                            },
                            {
                                "id": "5bd6c372b3049d3aaba814d5",
                                "targetHost": "172.13.1.107",
                                "targetPort": 443,
                                "isBigIP": true,
                                "state": "ACTIVE"
                            }
                        ],
                        "extensions": [{
                            "id": "5bd6c372b3049d3aaba814d3",
                            "url": "https://github.com/F5Networks/f5-appsvcs-extension/releases/download/v3.5.0/f5-appsvcs-3.5.0-3.noarch.rpm",
                            "filename": "f5-appsvcs-3.5.0-3.noarch.rpm",
                            "packagename": "f5-appsvcs-3.5.0-3.noarch",
                            "onGateway": true,
                            "status": "AVAILABLE",
                            "deviceIds": [
                                "5bd6c372b3049d3aaba814d4",
                                "5bd6c372b3049d3aaba814d5"
                            ]
                        }]

                    }],
                    "total": 1,
                    "limit": 10,
                    "page": 1,
                    "pages": 1
                }
            },
            "DeviceRequest": {
                "required": [
                    "targetHost",
                    "targetUsername",
                    "targetPassphrase"
                ],
                "properties": {
                    "targetHost": {
                        "type": "string"
                    },
                    "targetPort": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65534,
                        "default": 443
                    },
                    "targetUsername": {
                        "type": "string"
                    },
                    "targetPassphrase": {
                        "type": "string",
                        "format": "password"
                    }
                },
                "example": {
                    "targetHost": "172.13.1.107",
                    "targetPort": 443,
                    "targetUsername": "admin",
                    "targetPassphrase": "admin"
                }
            },
            "DeviceResponse": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "targetHost": {
                        "type": "string"
                    },
                    "targetPort": {
                        "type": "integer"
                    },
                    "isBigIP": {
                        "type": "boolean"
                    },
                    "state": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": "5bd6c372b3049d3aaba814d4",
                    "targetHost": "172.13.1.107",
                    "targetPort": 443,
                    "isBigIP": true,
                    "state": "ACTIVE"
                }
            },
            "ArrayOfDeviceResponse": {
                "example": [{
                        "id": "5bd6c372b3049d3aaba814d3",
                        "targetHost": "172.13.1.103",
                        "targetPort": 443,
                        "isBigIP": true,
                        "state": "ACTIVE"
                    },
                    {
                        "id": "5bd6c372b3049d3aaba814d4",
                        "targetHost": "172.13.1.107",
                        "targetPort": 443,
                        "isBigIP": true,
                        "state": "ACTIVE"
                    }
                ]
            },
            "DeviceUpdateRequest": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "targetHost": {
                        "type": "string"
                    },
                    "targetPort": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65534,
                        "default": 443
                    },
                    "targetUsername": {
                        "type": "string"
                    },
                    "targetPassphrase": {
                        "type": "string",
                        "format": "password"
                    }
                },
                "example": {
                    "id":"5ba06c34c075ca0008ff8653",
                    "targetHost": "172.13.1.107",
                    "targetPort": 443,
                    "targetUsername": "admin",
                    "targetPassphrase": "admin"
                }
            },
            "ExtensionRequest": {
                "required": [
                    "url"
                ],
                "properties": {
                    "url": {
                        "type": "string"
                    }
                },
                "example": {
                    "url": "https://github.com/F5Networks/f5-appsvcs-extension/releases/download/v3.5.0/f5-appsvcs-3.5.0-3.noarch.rpm"
                }
            },
            "ExtensionResponse": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "packagename": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "onGateway": {
                        "type": "boolean"
                    },
                    "deviceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "example": {
                    "id": "5bd6c372b3049d3aaba814d0",
                    "url": "https://github.com/F5Networks/f5-appsvcs-extension/releases/download/v3.5.0/f5-appsvcs-3.5.0-3.noarch.rpm",
                    "filename": "f5-appsvcs-3.5.0-3.noarch.rpm",
                    "packagename": "f5-appsvcs-3.5.0-3.noarch",
                    "status": "AVAILABLE",
                    "onGateway": true,
                    "deviceIds": [
                        "5bd6c372b3049d3aaba814d5",
                        "5bd6c372b3049d3aaba814d4"
                    ]
                }
            },
            "ArrayOfExtensionResponse": {
                "example": [{
                    "id": "5bd6c372b3049d3aaba814d0",
                    "url": "https://github.com/F5Networks/f5-appsvcs-extension/releases/download/v3.5.0/f5-appsvcs-3.5.0-3.noarch.rpm",
                    "filename": "f5-appsvcs-3.5.0-3.noarch.rpm",
                    "packagename": "f5-appsvcs-3.5.0-3.noarch",
                    "status": "AVAILABLE",
                    "onGateway": true,
                    "deviceIds": [
                        "5bd6c372b3049d3aaba814d5",
                        "5bd6c372b3049d3aaba814d4"
                    ]
                }]
            },
            "ExtensionUpdateRequest": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": "5bd6c372b3049d3aaba878b4",
                    "url": "https://github.com/F5Networks/f5-appsvcs-extension/releases/download/v3.5.0/f5-appsvcs-3.5.0-3.noarch.rpm"
                }
            },
            "EmptyDeploymentiControlResponse": {
                "type": "array",
                "items": {
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "status": {
                            "type": "integer"
                        },
                        "body": {
                            "$ref": "#/components/schemas/EmptyJSON"
                        }
                    },
                    "example": [{
                        "id": "c61e1394-250c-451d-a1c2-fc0f7d1fa99a",
                        "status": 200,
                        "body": {}
                    }]
                }
            },
            "ErrorResponse": {
                "properties": {
                    "err": {
                        "type": "string"
                    }
                },
                "example": {
                    "err": "Request Timed Out"
                }
            },
            "EmptyJSON": {
                "example": "{}"
            }
        }
    },
    "paths": {
        "/users": {
            "post": {
                "tags": [
                    "Users"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to create User",
                "description": "Create a new user for the demonstration application",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The new User object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires User Administrator role"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Users"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to get a list of User objects",
                "description": "Get a list of all defined user objects allowed in the demonstration application",
                "responses": {
                    "200": {
                        "description": "List of User Objects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Users"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires User Administrator role"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to get a User object referencing it id",
                "description": "Get a list of a User object allowed in the demonstration application",
                "parameters": [{
                    "in": "path",
                    "name": "userId",
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "description": "ID of the User object to return"
                }],
                "responses": {
                    "200": {
                        "description": "User Object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires User Administrator role"
                    },
                    "404": {
                        "description": "User not found for supplied id"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to update a User object referencing it id",
                "description": "Update a User's roles or password in the demonstration application",
                "parameters": [{
                    "in": "path",
                    "name": "userId",
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "description": "ID of the User object to return"
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User Object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires User Administrator role"
                    },
                    "404": {
                        "description": "User not found for supplied id"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to delete a User object referencing it id",
                "description": "Delete a User allowed in the demonstration application",
                "parameters": [{
                    "in": "path",
                    "name": "userId",
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "description": "ID of the User object to return"
                }],
                "responses": {
                    "200": {
                        "description": "User Object Deleted"
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires User Administrator role"
                    },
                    "404": {
                        "description": "User not found for supplied id"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/deployments": {
            "post": {
                "tags": [
                    "Deployments"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "parameters": [],
                "summary": "API endpoint to create a deployment of BIG-IP trusted devices",
                "description": "Create a new target deployment for the demonstration application",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeploymentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The new deployment object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeploymentResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires BIGIP Administrator role"
                    },
                    "409" :{
                        "description": "Resource conflict exists"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Deployments"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to list deployments of BIG-IP trusted devices",
                "description": "Lists available deployments for the demonstration application",
                "responses": {
                    "200": {
                        "description": "The existing deployments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Deployments"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires BIGIP Administrator role"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/deployments/{deploymentId}": {
            "get": {
                "tags": [
                    "Deployments"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to list a deployment of BIG-IP trusted devices",
                "description": "List target deployment from the demonstration application",
                "parameters": [{
                    "in": "path",
                    "name": "deploymentId",
                    "schema": {
                        "type": "string",
                        "pattern":"^[0-9a-fA-F]{24}$"
                    },
                    "required": true,
                    "description": "ID of the deployment to delete"
                }],
                "responses": {
                    "200": {
                        "description": "The deployment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeploymentResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires BIGIP Administrator role"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Deployments"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to update a deployment of BIG-IP trusted devices",
                "description": "Update a target deployment for the demonstration application",
                "parameters": [{
                    "in": "path",
                    "name": "deploymentId",
                    "schema": {
                        "type": "string",
                        "pattern":"^[0-9a-fA-F]{24}$"
                    },
                    "required": true,
                    "description": "ID of the deployment to update"
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeploymentUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated deployments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeploymentUpdateResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires BIGIP Administrator role"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Deployments"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to delete a deployment of BIG-IP trusted devices",
                "description": "Delete target deployment from the demonstration application",
                "parameters": [{
                    "in": "path",
                    "name": "deploymentId",
                    "schema": {
                        "type": "string",
                        "pattern":"^[0-9a-fA-F]{24}$"
                    },
                    "required": true,
                    "description": "ID of the deployment to delete"
                }],
                "responses": {
                    "200": {
                        "description": "Deployment object deleted"
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires BIGIP Administrator role"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/deployments/{deploymentId}/proxy{iControlRestURIEndpoint}": {
            "get": {
                "tags": [
                    "Deployments"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to issue an iControl REST GET call to a deployment",
                "description": "Place a GET request to all trusted BIG-IPs, in a deployemnt, from the demonstration application",
                "parameters": [{
                    "in": "path",
                    "name": "deploymentId",
                    "schema": {
                        "type": "string",
                        "pattern":"^[0-9a-fA-F]{24}$"
                    },
                    "required": true,
                    "description": "ID of the deployment to place iControl GET Request"
                }, {
                    "in": "path",
                    "name": "iControlRestURIEndpoint",
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "description": "The iControl REST API endpoint without the leading path slash to make request on deployment. </br><p>i.e.: /mgmt/shared/identified-devices/config/device-info</p>"
                }],
                "responses": {
                    "200": {
                        "description": "iControl REST responses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmptyDeploymentiControlResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires User Administrator"
                    },
                    "404": {
                        "description": "User not found for supplied id"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Deployments"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to issue an iControl REST GET call to a deployment",
                "description": "Place a POST request to all trusted BIG-IPs, in a deployemnt, from the demonstration application",
                "parameters": [{
                    "in": "path",
                    "name": "deploymentId",
                    "schema": {
                        "type": "string",
                        "pattern":"^[0-9a-fA-F]{24}$"
                    },
                    "required": true,
                    "description": "ID of the deployment to place iControl POST Request"
                }, {
                    "in": "path",
                    "name": "iControlRestURIEndpoint",
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "description": "The iControl REST API endpoint to make request on deployment"
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmptyJSON"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "iControl REST responses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmptyDeploymentiControlResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires User Administrator"
                    },
                    "404": {
                        "description": "User not found for supplied id"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Deployments"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to issue an iControl REST GET call to a deployment",
                "description": "Place a PUT request to all trusted BIG-IPs, in a deployemnt, from the demonstration application",
                "parameters": [{
                    "in": "path",
                    "name": "deploymentId",
                    "schema": {
                        "type": "string",
                        "pattern":"^[0-9a-fA-F]{24}$"
                    },
                    "required": true,
                    "description": "ID of the deployment to place iControl PUT Request"
                }, {
                    "in": "path",
                    "name": "iControlRestURIEndpoint",
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "description": "The iControl REST API endpoint to make request on deployment"
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmptyJSON"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "iControl REST responses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmptyDeploymentiControlResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires User Administrator"
                    },
                    "404": {
                        "description": "User not found for supplied id"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Deployments"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to issue an iControl REST GET call to a deployment",
                "description": "Place a PATCH request to all trusted BIG-IPs, in a deployemnt, from the demonstration application",
                "parameters": [{
                    "in": "path",
                    "name": "deploymentId",
                    "schema": {
                        "type": "string",
                        "pattern":"^[0-9a-fA-F]{24}$"
                    },
                    "required": true,
                    "description": "ID of the deployment to place iControl PATCH Request"
                }, {
                    "in": "path",
                    "name": "iControlRestURIEndpoint",
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "description": "The iControl REST API endpoint to make request on deployment"
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmptyJSON"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "iControl REST responses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmptyDeploymentiControlResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires User Administrator"
                    },
                    "404": {
                        "description": "User not found for supplied id"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Deployments"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to issue an iControl REST GET call to a deployment",
                "description": "Place a DELETE request to all trusted BIG-IPs, in a deployemnt, from the demonstration application",
                "parameters": [{
                    "in": "path",
                    "name": "deploymentId",
                    "schema": {
                        "type": "string",
                        "pattern":"^[0-9a-fA-F]{24}$"
                    },
                    "required": true,
                    "description": "ID of the deployment to place iControl DELETE Request"
                }, {
                    "in": "path",
                    "name": "iControlRestURIEndpoint",
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "description": "The iControl REST API endpoint to make request on deployment"
                }],
                "responses": {
                    "200": {
                        "description": "iControl REST responses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmptyDeploymentiControlResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires User Administrator"
                    },
                    "404": {
                        "description": "User not found for supplied id"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/devices": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to get a list of BIG-IP trusted devices",
                "description": "Get a list of all BIG-IP trusted devices allowed in the demonstration application",
                "responses": {
                    "200": {
                        "description": "List of trusted devices",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArrayOfDeviceResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires BIGIP Administrator role"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/devices/{deviceId}": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to get a BIG-IP trusted device",
                "description": "List a BIG-IP trusted device from the demonstration application",
                "parameters": [{
                    "in": "path",
                    "name": "deviceId",
                    "schema": {
                        "type": "string",
                        "pattern":"^[0-9a-fA-F]{24}$"
                    },
                    "required": true,
                    "description": "ID of the BIG-IP trusted device to list"
                }],
                "responses": {
                    "200": {
                        "description": "The new BIG-IP trusted device",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires BIGIP Administrator role"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/devices/{deviceId}/proxy{iControlRestURIEndpoint}": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to issue an iControl REST GET call",
                "description": "Place a GET request to a trusted BIG-IP from the demonstration application",
                "parameters": [{
                    "in": "path",
                    "name": "deviceId",
                    "schema": {
                        "type": "string",
                        "pattern":"^[0-9a-fA-F]{24}$"
                    },
                    "required": true,
                    "description": "ID of the BIG-IP trusted device to place iControl GET Request"
                }, {
                    "in": "path",
                    "name": "iControlRestURIEndpoint",
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "description": "The iControl REST API endpoint to make request on trusted BIG-IP device. </br><p>i.e.: /mgmt/shared/identified-devices/config/device-info</p>"
                }],
                "responses": {
                    "200": {
                        "description": "iControl REST response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmptyJSON"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires User Administrator"
                    },
                    "404": {
                        "description": "User not found for supplied id"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Devices"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to issue an iControl REST POST call",
                "description": "Place a POST request to a trusted BIG-IP from the demonstration application",
                "parameters": [{
                    "in": "path",
                    "name": "deviceId",
                    "schema": {
                        "type": "string",
                        "pattern":"^[0-9a-fA-F]{24}$"
                    },
                    "required": true,
                    "description": "ID of the BIG-IP trusted device to place iControl POST Request"
                }, {
                    "in": "path",
                    "name": "iControlRestURIEndpoint",
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "description": "The iControl REST API endpoint to make request on trusted BIG-IP device"
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmptyJSON"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "iControl REST response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmptyJSON"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires User Administrator"
                    },
                    "404": {
                        "description": "User not found for supplied id"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Devices"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to issue an iControl REST PUT call",
                "description": "Place a PUT request to a trusted BIG-IP from the demonstration application",
                "parameters": [{
                    "in": "path",
                    "name": "deviceId",
                    "schema": {
                        "type": "string",
                        "pattern":"^[0-9a-fA-F]{24}$"
                    },
                    "required": true,
                    "description": "ID of the BIG-IP trusted device to place iControl PUT Request"
                }, {
                    "in": "path",
                    "name": "iControlRestURIEndpoint",
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "description": "The iControl REST API endpoint to make request on trusted BIG-IP device"
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmptyJSON"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "iControl REST response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmptyJSON"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires User Administrator"
                    },
                    "404": {
                        "description": "User not found for supplied id"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Devices"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to issue an iControl REST PATCH call",
                "description": "Place a PATCH request to a trusted BIG-IP from the demonstration application",
                "parameters": [{
                    "in": "path",
                    "name": "deviceId",
                    "schema": {
                        "type": "string",
                        "pattern":"^[0-9a-fA-F]{24}$"
                    },
                    "required": true,
                    "description": "ID of the BIG-IP trusted device to place iControl PATCH Request"
                }, {
                    "in": "path",
                    "name": "iControlRestURIEndpoint",
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "description": "The iControl REST API endpoint to make request on trusted BIG-IP device"
                }],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmptyJSON"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "iControl REST response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmptyJSON"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires User Administrator"
                    },
                    "404": {
                        "description": "User not found for supplied id"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Devices"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to issue an iControl REST DELETE call",
                "description": "Place a DELETE request to a trusted BIG-IP from the demonstration application",
                "parameters": [{
                    "in": "path",
                    "name": "deviceId",
                    "schema": {
                        "type": "string",
                        "pattern":"^[0-9a-fA-F]{24}$"
                    },
                    "required": true,
                    "description": "ID of the BIG-IP trusted device to place iControl DELETE Request"
                }, {
                    "in": "path",
                    "name": "iControlRestURIEndpoint",
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "description": "The iControl REST API endpoint to make request on trusted BIG-IP device"
                }],
                "responses": {
                    "200": {
                        "description": "iControl REST response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmptyJSON"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires User Administrator"
                    },
                    "404": {
                        "description": "User not found for supplied id"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/extensions": {
            "get": {
                "tags": [
                    "Extensions"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to get a list of BIG-IP iControl LX extensions",
                "description": "Get a list of all BIG-IP iControl LX extensions available in the demonstration application",
                "responses": {
                    "200": {
                        "description": "List of iControl LX extensions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArrayOfExtensionResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires BIGIP Administrator role"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/extensions/{extensionId}": {
            "get": {
                "tags": [
                    "Extensions"
                ],
                "security": [{
                    "BasicAuth": []
                }],
                "summary": "API endpoint to get a BIG-IP iControl LX extension",
                "description": "Get a BIG-IP iControl LX extension available in the demonstration application",
                "parameters": [{
                    "in": "path",
                    "name": "extensionId",
                    "schema": {
                        "type": "string",
                        "pattern":"^[0-9a-fA-F]{24}$"
                    },
                    "required": true,
                    "description": "ID of the BIG-IP iControl LX extension to list"
                }],
                "responses": {
                    "200": {
                        "description": "The iControl LX extension",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExtensionResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Request requires user authentication"
                    },
                    "403": {
                        "description": "Request requires BIGIP Administrator role"
                    },
                    "500": {
                        "description": "Application Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}